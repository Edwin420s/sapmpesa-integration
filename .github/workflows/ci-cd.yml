name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      mongodb:
        image: mongo:5
        ports:
          - 27017:27017

    strategy:
      matrix:
        service: [auth, mpesa, transaction, sap, notification]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/${{ matrix.service }}/package-lock.json

    - name: Install dependencies
      run: |
        cd server/${{ matrix.service }}
        npm ci

    - name: Run tests
      run: |
        cd server/${{ matrix.service }}
        npm test
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/test_db
        POSTGRES_DB_URI: postgresql://postgres:postgres@localhost:5432/test_db

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push API Gateway
      uses: docker/build-push-action@v4
      with:
        context: ./server/api-gateway
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/sap-mpesa-api-gateway:latest

    - name: Build and push Auth Service
      uses: docker/build-push-action@v4
      with:
        context: ./server/auth-service
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/sap-mpesa-auth-service:latest

    - name: Build and push M-Pesa Service
      uses: docker/build-push-action@v4
      with:
        context: ./server/mpesa-service
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/sap-mpesa-mpesa-service:latest

    - name: Build and push Transaction Service
      uses: docker/build-push-action@v4
      with:
        context: ./server/transaction-service
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/sap-mpesa-transaction-service:latest

    - name: Build and push SAP Service
      uses: docker/build-push-action@v4
      with:
        context: ./server/sap-service
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/sap-mpesa-sap-service:latest

    - name: Build and push Notification Service
      uses: docker/build-push-action@v4
      with:
        context: ./server/notification-service
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/sap-mpesa-notification-service:latest

    - name: Build and push Frontend
      uses: docker/build-push-action@v4
      with:
        context: ./client
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/sap-mpesa-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to production
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USER }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        script: |
          cd /opt/sap-mpesa-integration
          git pull origin main
          docker-compose -f docker-compose.yml -f docker-compose.prod.yml pull
          docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
          docker system prune -f